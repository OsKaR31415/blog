{
  "hash": "b40b26d4d0485f624046113695432677",
  "result": {
    "markdown": "---\ntitle: convertir des listes python en tables markdown\ndescription: Un script python qui convertit une liste de liste en un tableau en syntaxe markdown.\ndate: '2023-03-10'\ncategories:\n  - informatique\nimage: _images/logo_markdown.png\n---\n\nLa syntaxe [markdown](https://docs.framasoft.org/fr/grav/markdown.html) est très pratique, car elle est légère, lisible, et qu'elle peut être facilement exportée dans de nombreux autre formats (notamment via [pandoc](https://pandoc.org)).\n\nCertains dialectes du markdown (des _flavours_) intègrent la possibilité de faire des tableaux. Cela permet donc d'intégrer des données dans un document.\n\nCe script vous permet de transformer des listes python en tables markdown, pour intégrer les résultats d'un calcul dans un document markdown :\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\ndef make_markdown_table(table, alignement: str =None):\n    \"\"\"\n    Args:\n        table: La table python à convertir en table markdown.\n               Elle doit être une liste de listes (rectangulaire).\n        alignement: L'alignement des cesllules ('gauche', 'centre' ou 'droite').\n    \"\"\"\n    # transformer tous les éléments en str\n    table = [[str(elt) for elt in line] for line in table]\n    # récupérer la largeur de chaque colonne\n    widths = [max(len(line[i]) for line in table) for i in range(len(table[0]))]\n    # faire que la largeur de chaque colonne soit au moins 3\n    widths = [max(w, 3) for w in widths]\n    # centrer le texte dans les colonnes\n    table = [[elt.center(w) for elt, w in zip(line, widths)] for line in table]\n\n    # séparer les titres et le contenu\n    liste_titres, *liste_contenu = table\n\n    # formatter les titres\n    titres = '| ' + ' | '.join(liste_titres) + ' |'\n\n    # mettre l'alignement des cellules\n    alignement = str(alignement).lower()\n    if alignement == 'none':\n        # on modifie uniquement la position des \":\"\n        # par défaut il n'y en a aucun\n        bord_gauche =  '| '\n        bord_centre = ' | '\n        bord_droite = ' |'\n    elif alignement == 'centre':\n        bord_gauche =  '|:'\n        bord_centre = ':|:'\n        bord_droite = ':|'\n    elif alignement == 'gauche':\n        bord_gauche =  '|:'\n        bord_centre = ' |:'\n        bord_droite = ' |'\n    elif alignement == 'droite':\n        bord_gauche =  '| '\n        bord_centre = ':| '\n        bord_droite = ':|'\n    else:\n        raise ValueError(\"l'alignement doit être 'gauche', 'centre' ou 'droite'.\")\n    # la ligne de séparation entre les titres et le contenu\n    separateur = bord_gauche + bord_centre.join(['-'*w for w in widths]) + bord_droite\n\n    # le contenu de la table\n    contenu = [None] * len(liste_contenu)  # liste vide qui sera remplie ensuite\n    for idx, ligne in enumerate(liste_contenu):\n        # pour chaque ligne, on modifie le contenu au bon indice\n        contenu[idx] = '| ' + ' | '.join(ligne) + ' |'\n    contenu = '\\n'.join(contenu)  # on regroupe les lignes\n\n    return titres + '\\n' + separateur + '\\n' + contenu\n\n```\n:::\n\n\n## Exemples\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nfrom math import pi\n\nT = [[\"colonne\", \"colonne 2\", \"colonne avec un nom super long\"],\n     [1, 42, \"contenu\"],\n     [\"super\", \"cool\", 73],\n     [\"contenu assez long\", pi, \"valeur\"]]\n\nprint(make_markdown_table(T))\n\nprint(\"\\nAlignée à gauche\")\nprint(make_markdown_table(T, alignement='gauche'))\n\nprint(\"\\nAlignée au centre\")\nprint(make_markdown_table(T, alignement='centre'))\n\nprint(\"\\nAlignée à droite\")\nprint(make_markdown_table(T, alignement='droite'))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|      colonne       |     colonne 2     | colonne avec un nom super long |\n| ------------------ | ----------------- | ------------------------------ |\n|         1          |         42        |            contenu             |\n|       super        |        cool       |               73               |\n| contenu assez long | 3.141592653589793 |             valeur             |\n\nAlignée à gauche\n|      colonne       |     colonne 2     | colonne avec un nom super long |\n|:------------------ |:----------------- |:------------------------------ |\n|         1          |         42        |            contenu             |\n|       super        |        cool       |               73               |\n| contenu assez long | 3.141592653589793 |             valeur             |\n\nAlignée au centre\n|      colonne       |     colonne 2     | colonne avec un nom super long |\n|:------------------:|:-----------------:|:------------------------------:|\n|         1          |         42        |            contenu             |\n|       super        |        cool       |               73               |\n| contenu assez long | 3.141592653589793 |             valeur             |\n\nAlignée à droite\n|      colonne       |     colonne 2     | colonne avec un nom super long |\n| ------------------:| -----------------:| ------------------------------:|\n|         1          |         42        |            contenu             |\n|       super        |        cool       |               73               |\n| contenu assez long | 3.141592653589793 |             valeur             |\n```\n:::\n:::\n\n\n",
    "supporting": [
      "python convertir une liste en table markdown_files"
    ],
    "filters": [],
    "includes": {}
  }
}
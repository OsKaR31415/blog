{"title":"convertir des listes python en tables markdown","markdown":{"yaml":{"title":"convertir des listes python en tables markdown","description":"Un script python qui convertit une liste de liste en un tableau en syntaxe markdown.","date":"2023-03-10","categories":["informatique"],"image":"_images/logo_markdown.png","jupyter":"python3"},"headingText":"Exemples","containsRefs":false,"markdown":"\n\nLa syntaxe [markdown](https://docs.framasoft.org/fr/grav/markdown.html) est très pratique, car elle est légère, lisible, et qu'elle peut être facilement exportée dans de nombreux autre formats (notamment via [pandoc](https://pandoc.org)).\n\nCertains dialectes du markdown (des _flavours_) intègrent la possibilité de faire des tableaux. Cela permet donc d'intégrer des données dans un document.\n\nCe script vous permet de transformer des listes python en tables markdown, pour intégrer les résultats d'un calcul dans un document markdown :\n\n```{python}\ndef make_markdown_table(table, alignement: str =None):\n    \"\"\"\n    Args:\n        table: La table python à convertir en table markdown.\n               Elle doit être une liste de listes (rectangulaire).\n        alignement: L'alignement des cesllules ('gauche', 'centre' ou 'droite').\n    \"\"\"\n    # transformer tous les éléments en str\n    table = [[str(elt) for elt in line] for line in table]\n    # récupérer la largeur de chaque colonne\n    widths = [max(len(line[i]) for line in table) for i in range(len(table[0]))]\n    # faire que la largeur de chaque colonne soit au moins 3\n    widths = [max(w, 3) for w in widths]\n    # centrer le texte dans les colonnes\n    table = [[elt.center(w) for elt, w in zip(line, widths)] for line in table]\n\n    # séparer les titres et le contenu\n    liste_titres, *liste_contenu = table\n\n    # formatter les titres\n    titres = '| ' + ' | '.join(liste_titres) + ' |'\n\n    # mettre l'alignement des cellules\n    alignement = str(alignement).lower()\n    if alignement == 'none':\n        # on modifie uniquement la position des \":\"\n        # par défaut il n'y en a aucun\n        bord_gauche =  '| '\n        bord_centre = ' | '\n        bord_droite = ' |'\n    elif alignement == 'centre':\n        bord_gauche =  '|:'\n        bord_centre = ':|:'\n        bord_droite = ':|'\n    elif alignement == 'gauche':\n        bord_gauche =  '|:'\n        bord_centre = ' |:'\n        bord_droite = ' |'\n    elif alignement == 'droite':\n        bord_gauche =  '| '\n        bord_centre = ':| '\n        bord_droite = ':|'\n    else:\n        raise ValueError(\"l'alignement doit être 'gauche', 'centre' ou 'droite'.\")\n    # la ligne de séparation entre les titres et le contenu\n    separateur = bord_gauche + bord_centre.join(['-'*w for w in widths]) + bord_droite\n\n    # le contenu de la table\n    contenu = [None] * len(liste_contenu)  # liste vide qui sera remplie ensuite\n    for idx, ligne in enumerate(liste_contenu):\n        # pour chaque ligne, on modifie le contenu au bon indice\n        contenu[idx] = '| ' + ' | '.join(ligne) + ' |'\n    contenu = '\\n'.join(contenu)  # on regroupe les lignes\n\n    return titres + '\\n' + separateur + '\\n' + contenu\n\n\n```\n\n\n\n\n\n```{python}\nfrom math import pi\n\nT = [[\"colonne\", \"colonne 2\", \"colonne avec un nom super long\"],\n     [1, 42, \"contenu\"],\n     [\"super\", \"cool\", 73],\n     [\"contenu assez long\", pi, \"valeur\"]]\n\nprint(make_markdown_table(T))\n\nprint(\"\\nAlignée à gauche\")\nprint(make_markdown_table(T, alignement='gauche'))\n\nprint(\"\\nAlignée au centre\")\nprint(make_markdown_table(T, alignement='centre'))\n\nprint(\"\\nAlignée à droite\")\nprint(make_markdown_table(T, alignement='droite'))\n\n```\n\n\n\n","srcMarkdownNoYaml":"\n\nLa syntaxe [markdown](https://docs.framasoft.org/fr/grav/markdown.html) est très pratique, car elle est légère, lisible, et qu'elle peut être facilement exportée dans de nombreux autre formats (notamment via [pandoc](https://pandoc.org)).\n\nCertains dialectes du markdown (des _flavours_) intègrent la possibilité de faire des tableaux. Cela permet donc d'intégrer des données dans un document.\n\nCe script vous permet de transformer des listes python en tables markdown, pour intégrer les résultats d'un calcul dans un document markdown :\n\n```{python}\ndef make_markdown_table(table, alignement: str =None):\n    \"\"\"\n    Args:\n        table: La table python à convertir en table markdown.\n               Elle doit être une liste de listes (rectangulaire).\n        alignement: L'alignement des cesllules ('gauche', 'centre' ou 'droite').\n    \"\"\"\n    # transformer tous les éléments en str\n    table = [[str(elt) for elt in line] for line in table]\n    # récupérer la largeur de chaque colonne\n    widths = [max(len(line[i]) for line in table) for i in range(len(table[0]))]\n    # faire que la largeur de chaque colonne soit au moins 3\n    widths = [max(w, 3) for w in widths]\n    # centrer le texte dans les colonnes\n    table = [[elt.center(w) for elt, w in zip(line, widths)] for line in table]\n\n    # séparer les titres et le contenu\n    liste_titres, *liste_contenu = table\n\n    # formatter les titres\n    titres = '| ' + ' | '.join(liste_titres) + ' |'\n\n    # mettre l'alignement des cellules\n    alignement = str(alignement).lower()\n    if alignement == 'none':\n        # on modifie uniquement la position des \":\"\n        # par défaut il n'y en a aucun\n        bord_gauche =  '| '\n        bord_centre = ' | '\n        bord_droite = ' |'\n    elif alignement == 'centre':\n        bord_gauche =  '|:'\n        bord_centre = ':|:'\n        bord_droite = ':|'\n    elif alignement == 'gauche':\n        bord_gauche =  '|:'\n        bord_centre = ' |:'\n        bord_droite = ' |'\n    elif alignement == 'droite':\n        bord_gauche =  '| '\n        bord_centre = ':| '\n        bord_droite = ':|'\n    else:\n        raise ValueError(\"l'alignement doit être 'gauche', 'centre' ou 'droite'.\")\n    # la ligne de séparation entre les titres et le contenu\n    separateur = bord_gauche + bord_centre.join(['-'*w for w in widths]) + bord_droite\n\n    # le contenu de la table\n    contenu = [None] * len(liste_contenu)  # liste vide qui sera remplie ensuite\n    for idx, ligne in enumerate(liste_contenu):\n        # pour chaque ligne, on modifie le contenu au bon indice\n        contenu[idx] = '| ' + ' | '.join(ligne) + ' |'\n    contenu = '\\n'.join(contenu)  # on regroupe les lignes\n\n    return titres + '\\n' + separateur + '\\n' + contenu\n\n\n```\n\n\n## Exemples\n\n\n\n```{python}\nfrom math import pi\n\nT = [[\"colonne\", \"colonne 2\", \"colonne avec un nom super long\"],\n     [1, 42, \"contenu\"],\n     [\"super\", \"cool\", 73],\n     [\"contenu assez long\", pi, \"valeur\"]]\n\nprint(make_markdown_table(T))\n\nprint(\"\\nAlignée à gauche\")\nprint(make_markdown_table(T, alignement='gauche'))\n\nprint(\"\\nAlignée au centre\")\nprint(make_markdown_table(T, alignement='centre'))\n\nprint(\"\\nAlignée à droite\")\nprint(make_markdown_table(T, alignement='droite'))\n\n```\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":true,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"include-in-header":{"text":"<script data-goatcounter=\"https://osk42.goatcounter.com/count\" async src=\"//gc.zgo.at/count.js\"></script>\n"},"output-file":"python convertir une liste en table markdown.html"},"language":{"toc-title-document":"Table des matières","toc-title-website":"Sur cette page","related-formats-title":"Autres formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"La source","other-links-title":"Autres liens","code-links-title":"Liens de code","launch-dev-container-title":"Lancer le Dev Container","launch-binder-title":"Lancer le Binder","article-notebook-label":"Cahier d'articles","notebook-preview-download":"Télécharger le cahier","notebook-preview-download-src":"Télécharger le code source","notebook-preview-back":"Retour à l'article","manuscript-meca-bundle":"Archive MECA","section-title-abstract":"Résumé","section-title-appendices":"Annexes","section-title-footnotes":"Notes de bas de page","section-title-references":"Les références","section-title-reuse":"Réutilisation","section-title-copyright":"Droits d'auteur","section-title-citation":"Citation","appendix-attribution-cite-as":"Veuillez citer ce travail comme suit :","appendix-attribution-bibtex":"BibTeX","appendix-view-license":"Voir la Licence","title-block-author-single":"Auteur·rice","title-block-author-plural":"Auteur·rice·s","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Date de publication","title-block-modified":"Modifié","title-block-keywords":"Mots clés","callout-tip-title":"Astuce","callout-note-title":"Note","callout-warning-title":"Avertissement","callout-important-title":"Important","callout-caution-title":"Mise en garde","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Montrer tout le code","code-tools-hide-all-code":"Cacher tout le code","code-tools-view-source":"Voir les sources","code-tools-source-code":"Code source","tools-share":"Share","tools-download":"Download","code-line":"Ligne","code-lines":"Lignes","copy-button-tooltip":"Copier vers le presse-papier","copy-button-tooltip-success":"Copié","repo-action-links-edit":"Modifier cette page","repo-action-links-source":"Voir la source","repo-action-links-issue":"Faire part d'un problème","back-to-top":"Retour au sommet","search-no-results-text":"Pas de résultats","search-matching-documents-text":"documents trouvés","search-copy-link-title":"Copier le lien vers la recherche","search-hide-matches-text":"Cacher les correspondances additionnelles","search-more-match-text":"correspondance de plus dans ce document","search-more-matches-text":"correspondances de plus dans ce document","search-clear-button-title":"Effacer","search-text-placeholder":"","search-detached-cancel-button-title":"Annuler","search-submit-button-title":"Envoyer","search-label":"Recherche","toggle-section":"Basculer la section","toggle-sidebar":"Basculer la barre latérale","toggle-dark-mode":"Basculer le mode sombre","toggle-reader-mode":"Basculer en mode lecteur","toggle-navigation":"Basculer la navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Théorème","crossref-lem-title":"Lemme","crossref-cor-title":"Corollaire","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Définition","crossref-exm-title":"Exemple","crossref-exr-title":"Exercice","crossref-ch-prefix":"Chapitre","crossref-apx-prefix":"Annexe","crossref-sec-prefix":"Section","crossref-eq-prefix":"Équation","crossref-lof-title":"Liste des Figures","crossref-lot-title":"Liste des Tables","crossref-lol-title":"Liste des Listings","environment-proof-title":"Preuve","environment-remark-title":"Remarque","environment-solution-title":"Solution","listing-page-order-by":"Trier par","listing-page-order-by-default":"Ordre par défaut","listing-page-order-by-date-asc":"Le plus ancien","listing-page-order-by-date-desc":"Le plus récent","listing-page-order-by-number-desc":"Descendant","listing-page-order-by-number-asc":"Ascendant","listing-page-field-date":"Date","listing-page-field-title":"Titre","listing-page-field-description":"Description","listing-page-field-author":"Auteur·rice","listing-page-field-filename":"Nom de fichier","listing-page-field-filemodified":"Modifié","listing-page-field-subtitle":"Sous-titre","listing-page-field-readingtime":"Temps de lecture","listing-page-field-wordcount":"Compteur de Mots","listing-page-field-categories":"Catégories","listing-page-minutes-compact":"{0} min.","listing-page-category-all":"Tous","listing-page-no-matches":"Aucun article correspondant","listing-page-words":"{0} mots","listing-page-filter":"Filtre","draft":"Brouillon"},"metadata":{"lang":"fr","fig-responsive":true,"quarto-version":"1.6.43","editor":{"render-on-save":false},"comments":{"giscus":{"repo":"OsKaR31415/blog","repo-id":"R_kgDOItLnjQ","category":"Announcements","category-id":"DIC_kwDOItLnjc4CYln7","mapping":"url","reactions-enabled":true,"loading":"lazy","input-position":"bottom","theme":{"light":"noborder_light","dark":"noborder_dark"},"language":"fr"}},"theme":{"light":"flatly","dark":"darkly"},"title-block-banner":true,"page-layout":"full","title":"convertir des listes python en tables markdown","description":"Un script python qui convertit une liste de liste en un tableau en syntaxe markdown.","date":"2023-03-10","categories":["informatique"],"image":"_images/logo_markdown.png","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}